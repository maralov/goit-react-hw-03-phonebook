{"version":3,"sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/Input/Input.styled.js","components/Input/Input.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.styled.js","components/App/App.jsx","index.js","theme/index.js"],"names":["StyledSection","Title","Section","title","children","StyledInput","p","theme","colors","grey","borderRadius","Input","props","FormItem","INITIAL_STATE","number","name","ContactForm","state","handleChange","currentTarget","value","setState","handleSubmit","e","preventDefault","onSubmit","resetForm","this","onChange","type","autoComplete","pattern","required","htmlType","icon","UserAddOutlined","Component","ContactList","contacts","onDeleteUser","bordered","map","id","Item","Meta","description","onClick","danger","DeleteOutlined","defaultProps","Filter","restProps","Container","App","filter","shortid","generate","find","contact","includes","alert","prevState","handleFilterChange","getVisibleContacts","normalizedFilter","toLowerCase","item","deleteContact","contactId","savedContacts","JSON","parse","localStorage","getItem","LOCAL_STORAGE_CONTACTS","_","setItem","stringify","visibleContacts","gutter","className","md","lg","style","marginBottom","placeholder","length","ReactDOM","render","StrictMode","black","document","getElementById"],"mappings":"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","file":"static/js/main.b41ca13c.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const StyledSection = styled.section`\n  padding: 24px 0;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 24px;\n  font-size: 36px;\n  font-weight: bold;\n`;\n","import PropTypes from 'prop-types';\n\nimport { StyledSection, Title } from './Section.styled';\n\nexport default function Section({ title, children }) {\n  return (\n    <StyledSection>\n      {title && <Title>{title}</Title>}\n      {children}\n    </StyledSection>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any.isRequired,\n};\n","import styled from '@emotion/styled/macro';\n\nexport const StyledInput = styled.input`\n  display: block;\n  width: 100%;\n\n  border: 1px solid ${p => p.theme.colors.grey};\n  padding: 4px;\n  border-radius: ${p => p.theme.borderRadius}; ;\n`;\n","import { StyledInput } from './Input.styled';\n\nexport default function Input(props) {\n  return <StyledInput {...props} />;\n}\n","import styled from '@emotion/styled/macro';\n\nexport const FormItem = styled.div`\n  margin-bottom: 16px;\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Button } from 'antd';\nimport { UserAddOutlined } from '@ant-design/icons';\n\nimport Input from '../Input/';\nimport { FormItem } from './ContactForm.styled';\n\nconst INITIAL_STATE = { number: '', name: '' };\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func,\n  };\n\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  handleChange = ({ currentTarget }) => {\n    const value = currentTarget.value;\n    const name = currentTarget.name;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { onSubmit } = this.props;\n    onSubmit(this.state.name, this.state.number);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Card>\n          <FormItem>\n            <label>\n              Name\n              <Input\n                value={name}\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"name\"\n                autoComplete=\"off\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n              />\n            </label>\n          </FormItem>\n          <FormItem>\n            <label>\n              Phone Number\n              <Input\n                value={number}\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"number\"\n                autoComplete=\"off\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n              />\n            </label>\n          </FormItem>\n\n          <Button htmlType=\"submit\" type=\"primary\" icon={<UserAddOutlined />}>\n            Add contact\n          </Button>\n        </Card>\n      </form>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\nimport { List, Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nexport default function ContactList({ contacts, onDeleteUser }) {\n  return (\n    <List bordered>\n      {contacts.map(({ id, name, number }) => (\n        <List.Item key={id}>\n          <List.Item.Meta title={name} description={number} />\n          <Button\n            onClick={() => onDeleteUser(id)}\n            danger\n            type=\"text\"\n            icon={<DeleteOutlined />}\n          ></Button>\n        </List.Item>\n      ))}\n    </List>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteUser: PropTypes.func,\n};\n\nContactList.defaultProps = {\n  contacts: [],\n  onDeleteUser: () => {},\n};\n","import Input from '../Input';\nimport PropTypes from 'prop-types';\n\nexport default function Filter({ value, onChange, ...restProps }) {\n  return (\n    <label>\n      <h3>Find contacts by name</h3>\n      <Input name=\"filter\" value={value} onChange={onChange} {...restProps} />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\n  max-width: 1140px;\n  padding: 0 20px;\n  margin: 0 auto;\n`;\n","import React, { Component } from 'react';\nimport { Row, Col } from 'antd';\nimport shortid from 'shortid';\nimport Section from 'components/Section';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n\nimport { Container } from './App.styled';\n\nimport LOCAL_STORAGE_CONTACTS from 'constants';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const savedContacts = JSON.parse(\n      localStorage.getItem(LOCAL_STORAGE_CONTACTS),\n    );\n\n    savedContacts && this.setState({ contacts: savedContacts });\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\n        LOCAL_STORAGE_CONTACTS,\n        JSON.stringify(this.state.contacts),\n      );\n    }\n  }\n\n  handleSubmit = (name, number) => {\n    const id = shortid.generate();\n\n    const isContact = this.state.contacts.find(contact =>\n      contact.name.includes(name),\n    );\n\n    isContact\n      ? alert(`${name} is already in contacts`)\n      : this.setState(prevState => ({\n          contacts: [...prevState.contacts, { id, name, number }],\n        }));\n  };\n\n  handleFilterChange = ({ currentTarget }) => {\n    const value = currentTarget.value;\n    const name = currentTarget.name;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Container>\n        <Row gutter={16}>\n          <Col className=\"gutter-row\" md={18} lg={10}>\n            <Section title=\"Phonebook\">\n              <ContactForm onSubmit={this.handleSubmit} />\n            </Section>\n          </Col>\n\n          <Col className=\"gutter-row\" md={18} lg={20}>\n            <Section title=\"Contacts\">\n              <Filter\n                onChange={this.handleFilterChange}\n                value={filter}\n                style={{ marginBottom: 24 }}\n                placeholder=\"Enter name\"\n              />\n\n              {contacts.length ? (\n                <ContactList\n                  contacts={visibleContacts}\n                  onDeleteUser={this.deleteContact}\n                />\n              ) : (\n                'Phonebook is Empty '\n              )}\n            </Section>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@emotion/react';\n\nimport theme from './theme';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","/* eslint-disable import/no-anonymous-default-export */\nexport default {\n  colors: {\n    black: '#000000',\n    grey: '#d6d6d6',\n  },\n\n  borderRadius: '4px',\n};\n"],"sourceRoot":""}